// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetShopBackend.Data;

#nullable disable

namespace PetShopBackend.Migrations
{
    [DbContext(typeof(PetShopContext))]
    [Migration("20231029170304_List of OrderItems to order table")]
    partial class ListofOrderItemstoordertable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("PetShopBackend.models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("PetShopBackend.models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("PetShopBackend.models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(0);

                    b.Property<decimal?>("Price")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.ToTable("Item");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("PetShopBackend.models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("PetShopBackend.models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrderId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("PetShopBackend.models.Pet", b =>
                {
                    b.HasBaseType("PetShopBackend.models.Item");

                    b.Property<int?>("Age")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(4);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(7);

                    b.Property<string>("Breed")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(3);

                    b.Property<string>("Description")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(6);

                    b.Property<string>("Gender")
                        .HasColumnType("TEXT")
                        .HasColumnOrder(5);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<string>("Species")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("PetShopBackend.models.Product", b =>
                {
                    b.HasBaseType("PetShopBackend.models.Item");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(1);

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnOrder(2);

                    b.ToTable("Product");
                });

            modelBuilder.Entity("PetShopBackend.models.Order", b =>
                {
                    b.HasOne("PetShopBackend.models.Customer", null)
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetShopBackend.models.OrderItem", b =>
                {
                    b.HasOne("PetShopBackend.models.Order", null)
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetShopBackend.models.Pet", b =>
                {
                    b.HasOne("PetShopBackend.models.Item", null)
                        .WithOne()
                        .HasForeignKey("PetShopBackend.models.Pet", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetShopBackend.models.Product", b =>
                {
                    b.HasOne("PetShopBackend.models.Item", null)
                        .WithOne()
                        .HasForeignKey("PetShopBackend.models.Product", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PetShopBackend.models.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("PetShopBackend.models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });
#pragma warning restore 612, 618
        }
    }
}
